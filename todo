#!/bin/bash
# author: rain31@gmail.com
# github: https://github.com/rains31

# This is a simple todo tool implemented in Shell.

# Rewritten by ChatGPT

# Set the path to the todo.txt file
TODO="$HOME/todo.txt"

# Check if gsed is available, otherwise use sed
hash gsed &>/dev/null && SED=gsed || SED=sed
# Check if gawk is available, otherwise use awk
hash gawk &>/dev/null && AWK=gawk || AWK=awk

# Set the file permissions for todo.txt
umask 0177

# Create the todo.txt file if it doesn't exist
[ -f "$TODO" ] || touch "$TODO"

# Function to display usage information
usage() {
    echo -e "Usage:\n\t$0 -a|--add <task>\n\t$0 -d|--done <task_number>\n\t$0 -u|--undo <task_number>\n\t$0 -D|--del|--delete <task_number>\n\t$0 -r|--recycle\n\t$0 -s|--sort\n\t$0 -l|--list\n\t$0 -h|--help"
}

# Function to add a task to the todo list
add_task() {
    local task="$*"
    echo "- [ ] $task" >>"$TODO"
    echo "Added '$task' to todo.txt."
    $0 -l
}

# Function to mark a task as done
mark_done() {
    local task_number="$1"
    [ -z "$task_number" ] && echo "Usage: $0 -d|--done <task_number>" && exit 1
    local marker="${3-x}"
    [ "${#marker}" -gt 1 ] && exit 1
    [ -z "$(echo -n "$marker" | tr -d '!?x')" ] || exit 1
    $SED -i "$task_number s/\[.\]/[$marker]/" "$TODO"
    $0 -l
}

# Function to undo a completed task
undo_done() {
    local task_number="$1"
    [ -z "$task_number" ] && echo "Usage: $0 -u|--undo <task_number>" && exit 1
    $SED -i "$task_number s/\[.\]/[ ]/" "$TODO"
    $0 -l
}

# Function to delete a task
delete_task() {
    local task_number="$1"
    [ -z "$task_number" ] && echo "Usage: $0 -D|--del|--delete <task_number>" && exit 1
    # Prompt for confirmation
    read -p "Are you sure you want to delete task $task_number? [y/N] " confirm
    if [[ $confirm =~ ^[Yy]$ ]]; then
        $SED -i "$task_number d" "$TODO"
        echo "Task $task_number deleted."
        $0 -l
    else
        echo "Deletion canceled."
    fi
}

# Function to recycle completed tasks
recycle_completed() {
    $SED -i '/^\[.\]/d' "$TODO"
    $0 -l
}

# Function to sort the task list
sort_tasks() {
    sort "$TODO" -o "$TODO"
    $0 -l
}

# Function to list tasks
list_tasks() {
    echo -ne "\033[2J\033[1;1H"
    $AWK '{printf("\033[%dm%d %s\033[m\n", $1=="[x]"||$2=="[x]"?9:$1=="[!]"||$2=="[!]"?31:$1=="[?]"||$2=="[?]"?33:32, NR, $0)}' "$TODO"
}

# Process command line arguments
case $1 in
-a | --add)
    shift
    add_task "$@"
    ;;
-d | --done)
    shift
    mark_done "$1" "$@"
    ;;
-u | --undo)
    shift
    undo_done "$1" "$@"
    ;;
-D | --del | --delete)
    shift
    delete_task "$1" "$@"
    ;;
-r | --recycle)
    recycle_completed
    ;;
-s | --sort)
    sort_tasks
    ;;
-l | --list | "")
    list_tasks
    ;;
-h | --help)
    usage
    ;;
*)
    add_task "$@"
    ;;
esac
